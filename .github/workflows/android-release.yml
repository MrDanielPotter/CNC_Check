name: Build Android Release APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest

    env:
      P4A_SDK_ROOT: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROIDAPI: "34"
      ANDROIDMINAPI: "26"
      ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
      ANDROIDNDKVER: "25.1.8937393"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 11 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "11"

      - name: Install system & Python deps
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git zip unzip wget curl build-essential ccache \
            libffi-dev libssl-dev libsqlite3-dev zlib1g-dev
          python3 -m pip install --upgrade pip
          python3 -m pip install "buildozer>=1.5.0" "Cython<3.1" wheel

      - name: Fetch Android Commandline Tools (stable) and layout
        shell: bash
        run: |
          set -e
          SDK="${P4A_SDK_ROOT}"
          mkdir -p "${SDK}/cmdline-tools"
          URL="https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip"
          wget -q "${URL}" -O /tmp/cli.zip

          unzip -l /tmp/cli.zip | sed -n '1,40p'
          rm -rf /tmp/cmdline-tools
          unzip -q /tmp/cli.zip -d /tmp/

          mkdir -p "${SDK}/cmdline-tools/latest"
          cp -r /tmp/cmdline-tools/* "${SDK}/cmdline-tools/latest/"

          mkdir -p "${SDK}/tools/bin"
          ln -sf "${SDK}/cmdline-tools/latest/bin/sdkmanager" "${SDK}/tools/bin/sdkmanager"

          echo "${SDK}/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "${SDK}/platform-tools" >> "$GITHUB_PATH"

      - name: Accept SDK licenses & install SDK/NDK
        shell: bash
        run: |
          set -e
          export ANDROID_SDK_ROOT="${P4A_SDK_ROOT}"
          export PATH="${P4A_SDK_ROOT}/cmdline-tools/latest/bin:${P4A_SDK_ROOT}/platform-tools:${PATH}"

          echo "Java:"
          java -version || true
          echo "sdkmanager:"
          which sdkmanager && sdkmanager --version

          yes | sdkmanager --sdk_root="${P4A_SDK_ROOT}" --licenses || true
          sdkmanager --sdk_root="${P4A_SDK_ROOT}" \
            "platform-tools" \
            "platforms;android-${ANDROIDAPI}" \
            "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" \
            "ndk;${ANDROIDNDKVER}"

          # Удалим возможные превью build-tools 36*
          if [ -d "${P4A_SDK_ROOT}/build-tools" ]; then
            find "${P4A_SDK_ROOT}/build-tools" -maxdepth 1 -type d -name "36*" -print -exec rm -rf {} \; || true
          fi

          # Проверим aidl
          test -x "${P4A_SDK_ROOT}/build-tools/${ANDROID_BUILD_TOOLS_VERSION}/aidl"

      - name: Prefetch python-for-android and verify androidstorage4kivy recipe
        shell: bash
        run: |
          set -e
          P4A_DIR="$HOME/.buildozer/android/platform/python-for-android"
          if [ ! -d "$P4A_DIR" ]; then
            mkdir -p "$(dirname "$P4A_DIR")"
            git clone -b master --single-branch https://github.com/kivy/python-for-android.git "$P4A_DIR"
          fi
          if [ -d "$P4A_DIR/pythonforandroid/recipes/androidstorage4kivy" ]; then
            echo "Recipe androidstorage4kivy found"
          else
            echo "Recipe androidstorage4kivy NOT found"; exit 1
          fi

      - name: Patch buildozer.spec (SDK/NDK paths, tools, deps/permissions)
        shell: bash
        run: |
          set -e
          SPEC="buildozer.spec"
          if [ ! -f "${SPEC}" ]; then
            buildozer init
          fi

          python3 - << 'PY'
import re, os, io
spec_path = "buildozer.spec"
txt = io.open(spec_path, "r", encoding="utf-8").read()

def set_kv(txt, key, value):
    import re
    pat = re.compile(rf'^\s*{re.escape(key)}\s*=.*$', re.M)
    line = f"{key} = {value}"
    return pat.sub(line, txt) if pat.search(txt) else txt + ("\n" if not txt.endswith("\n") else "") + line + "\n"

txt = set_kv(txt, "android.sdk_dir", os.environ.get("ANDROID_SDK_ROOT", "${HOME}/.buildozer/android/platform/android-sdk"))
txt = set_kv(txt, "android.ndk_dir", os.path.join(os.environ.get("ANDROID_SDK_ROOT", "${HOME}/.buildozer/android/platform/android-sdk"), "ndk", os.environ.get("ANDROIDNDKVER","25.1.8937393")))
txt = set_kv(txt, "android.build_tools", os.environ.get("ANDROID_BUILD_TOOLS_VERSION","34.0.0"))

req_line = "requirements = python3,kivy,android,androidstorage4kivy,kivymd==2.0.0"
if re.search(r'^\s*requirements\s*=.*$', txt, re.M):
    # мягкая п
